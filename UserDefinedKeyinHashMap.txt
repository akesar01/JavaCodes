import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Random;
import java.util.StringTokenizer;
import java.util.List;
import java.util.Collections;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.Comparator;
public class cf2 {
 	private static FastScanner fs=new FastScanner();
	public static void main(String[] args) {
		Map<Node ,Integer> map = new HashMap<>();
		map.put(new Node(1,1),1);
		map.put(new Node(1,1),2);
		for(Node n: map.keySet())
		{
			System.out.println(map.get(n));
		}
		
	
	}
	static class Node
	{
		int a;
		int b;
		Node(int a,int b)
		{
			this.a = a;
			this.b = b;
		}
		public int hashCode()
		{
			int temp = 14;
			int ans =1;
			ans = temp*ans + a+b;
			return ans;
		}
		public boolean equals(Object o)
		{
			if(this==o) return true;
			if(o==null) return false;
			if(this.getClass() != o.getClass())
			{
				return false;
			}
			Node other = (Node )o;
			if(other.a==this.a && other.b==this.b)
			{
				return true;
			}
			return false;
		}


	}
	
 
	static final Random random=new Random();
	
	static void ruffleSort(int [] a) {
		int n=a.length;//shuffle, then sort 
		for (int i=0; i<n; i++) {
			int oi=random.nextInt(n); int temp=a[oi];
			a[oi]=a[i]; a[i]=temp;
		}
		Arrays.sort(a);
	}

	
	static class FastScanner {
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer("");
		String next() {
			while (!st.hasMoreTokens())
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			return st.nextToken();
		}
		
		int nextInt() {
			return Integer.parseInt(next());
		}
		int[] readArray(int n) {
			int[] a=new int[n];
			for (int i=0; i<n; i++) a[i]=nextInt();
			return a;
		}
		long nextLong() {
			return Long.parseLong(next());
		}
		int [] sort(int [] arr)
		{
			List<Integer> list = new ArrayList<>();
			for(int i : arr) list.add(i);	
		
			Collections.sort(list);
			int res[] = new int[arr.length];
			for(int i=0;i<arr.length;i++) res[i] = list.get(i);
			

			return res;
		}
		void debug(int a)
		{
			System.out.println("This is var "+a);
		}
	}
 
	
}
